{"version":3,"sources":["components/Grid.js","components/Canvas.js","components/OptionsPicker.js","App.js","serviceWorker.js","index.js"],"names":["Grid","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","space","grid","React","createRef","ctx","current","getContext","bounds","getBoundingClientRect","strokeStyle","lineWidth","lineCap","width","window","innerWidth","height","innerHeight","renderGrid","clearRect","beginPath","moveTo","i","lineTo","closePath","stroke","n","react_default","a","createElement","x","y","style","border","pointerEvents","position","ref","Component","Canvas","drawing","canvas","clear","canvasContext","event","setState","loc","calcPath","clientX","clientY","_this2","onMouseLeave","e","disableDraw","onMouseDown","triggerDraw","onMouseMove","onDrag","onMouseUp","OptionsPicker","expanded","FlyoutStyle","onMouseEnter","expand","contract","FlyoutTab","OptionsWrapper","children","styled","div","_templateObject","_templateObject2","_ref","display","right","top","bottom","margin","padding","borderRadius","App","action","clearCanvas","_this3","App_Container","Canvas_Canvas","Grid_Grid","OptionsPicker_OptionsPicker","type","value","min","max","onChange","parseInt","target","onClick","setBounds","Container","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5073d263.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default class Grid extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            space: this.props.space || 20\n        }\n        this.grid = React.createRef();\n    }\n\n    componentDidMount(){\n        this.ctx = this.grid.current.getContext('2d');\n        this.ctx.bounds = this.grid.current.getBoundingClientRect();\n        this.ctx.strokeStyle = \"#888888\"\n\t    this.ctx.lineWidth = 1\n        this.ctx.lineCap = \"round\"\n        this.ctx.width = window.innerWidth;\n        this.ctx.height = window.innerHeight;\n        this.renderGrid(this.ctx);\n    }\n\n    renderGrid(ctx){\n        if (!ctx){ return; }\n        ctx.bounds = this.grid.current.getBoundingClientRect();\n        ctx.clearRect (0, 0, ctx.bounds.width, ctx.bounds.height);\n        ctx.lineWidth = 1\n        ctx.strokeStyle = \"#888888\"\n        ctx.lineCap = \"round\"\n        ctx.beginPath();\n        ctx.moveTo(0, 0);\n        for (var i = 0; i <= ctx.bounds.width; i = i + this.props.space){\n            ctx.moveTo(i, 0);\n            ctx.lineTo(i, ctx.bounds.height);\n            ctx.closePath();\n            ctx.stroke();\n        }\n        for (var n = 0; n <=ctx.bounds.height; n = n + this.props.space){\n            ctx.moveTo(0, n);\n            ctx.lineTo(ctx.bounds.width, n);\n            ctx.closePath();\n            ctx.stroke();\n        }\n    }\n\n    \n\n    render(){\n        this.renderGrid(this.ctx);\n        return (\n            <canvas width={this.props.window.x} height={this.props.window.y} style={{'border': '1px solid red', 'pointerEvents': 'none', 'position': 'absolute'}}ref={this.grid} ></canvas>\n        )\n    }\n}","import React, { Component } from 'react';\n\nexport default class Canvas extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            drawing: false,\n        }\n        this.canvas = React.createRef();\n    }\n\n    shouldComponentUpdate(props, state){\n        if (props.clear){\n            this.canvasContext.clear();\n            return false;\n        }\n        return true;\n    }\n\n    componentDidMount(){\n        this.canvasContext = this.canvas.current.getContext('2d');\n        this.canvasContext.bounds = this.canvas.current.getBoundingClientRect();\n        this.canvasContext.strokeStyle = \"#000000\";\n\t    this.canvasContext.lineWidth = 1;\n        this.canvasContext.lineCap = \"round\";\n        this.canvasContext.width = window.innerWidth;\n        this.canvasContext.height = window.innerHeight;\n        this.canvasContext.clear = function() {\n            this.clearRect (0, 0, this.bounds.width, this.bounds.height);\n        }\n    }\n\n    disableDraw(event){\n        this.setState({ drawing: false });\n    }\n    \n    triggerDraw(event){\n        var loc = this.calcPath(event);\n\n        this.canvasContext.beginPath();\n        this.canvasContext.moveTo(loc.x, loc.y);\n\n        this.setState({\n            drawing: true\n        });\n    }\n\n    onDrag(event){\n    if (this.state.drawing){\n        var loc = this.calcPath(event);\n\n        this.canvasContext.lineTo(loc.x, loc.y);\n        this.canvasContext.stroke();\n        }\n    }\n\n    calcPath(event){\n    var loc = this.canvasContext.bounds;\n    return {\n        x: event.clientX - loc.x,\n        y: event.clientY - loc.y\n        }\n    }\n\n    render(){\n        return (\n            <canvas ref={ this.canvas } \n            onMouseLeave={e => this.disableDraw(e)}\n            onMouseDown={e => this.triggerDraw(e)}\n            onMouseMove={e => this.onDrag(e)}\n            onMouseUp={e => this.disableDraw(e)}\n            width={this.props.window.x} height={this.props.window.y} style={{'position': \"absolute\"}}/>\n        )\n    }\n\n}","import React, { Component } from 'react'\nimport styled  from 'styled-components'\n\nexport default class OptionsPicker extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            expanded: true\n        }\n    }\n\n    expand(){\n        this.setState({\n            expanded: true\n        })\n    }\n\n    contract(){\n        this.setState({\n            expanded: false\n        })\n    }\n\n    render(){\n        return (\n            <div style={FlyoutStyle(this.state)} onMouseEnter={() => this.expand()} onMouseLeave={() => this.contract()}>\n                <FlyoutTab />\n                <OptionsWrapper>\n                    {this.props.children}\n                </OptionsWrapper>\n            </div>\n        )\n    }\n}\n\nconst FlyoutTab = styled.div`\n    clip-path: polygon(0 35%, 100% 0, 100% 100%, 0 65%);\n    display: inline-block;\n    width: 25px;\n    height: 60px;\n    background: #1b1b1b;\n`\n\nconst OptionsWrapper = styled.div`\n    background-color: #1b1b1b;\n    display: flex;\n    flex-direction: column;\n    position: relative;\n`\n\nconst FlyoutStyle = ({ expanded }) => {\n    return {\n        'display':      'flex',\n        'width':        'auto',\n        'position':     'fixed',\n        'right':        expanded ? 0 : -135,\n        'top':          0,\n        'bottom':       0,\n        'margin':       'auto',\n        'height':       'fit-content',\n        'padding':      '22px 0px',\n        'borderRadius':     '4px'\n    }\n}","import React, { Component } from 'react';\nimport Grid from './components/Grid';\nimport Canvas from './components/Canvas';\nimport OptionsPicker from './components/OptionsPicker';\nimport io from 'socket.io-client';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      window: {\n        x: window.innerWidth,\n        y: window.innerHeight\n      },\n      space: 60 \n    }\n  }\n\n  actions(action){\n    switch (action){\n      case 'clear':\n        this.clearCanvas();\n    }\n  }\n\n  clearCanvas(){\n    this.setState({clear: true}, () => this.setState({clear: false}))\n  }\n\n  setBounds(){\n    this.setState({\n      window: {\n        x: window.innerWidth,\n        y: window.innerHeight\n      }\n    })\n  }\n\n  render() {\n    return (\n      <Container>\n        <Canvas clear={this.state.clear} window={this.state.window} />\n        <Grid window={this.state.window} space={this.state.space} />\n        <OptionsPicker>\n          <input type=\"range\" value={this.state.space} min=\"60\" max=\"200\"onChange={(e) => this.setState({space: parseInt(e.target.value)})}/>\n          <button onClick={() => this.clearCanvas()} > Clear </button>\n          <button onClick={() => this.setBounds()} > Set Screen </button>\n        </OptionsPicker>\n      </Container>\n    );\n  }\n}\n\nconst Container = (props) => <div>{props.children}</div>;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}